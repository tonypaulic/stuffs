#!/bin/bash
# for Arch: XFCE GIT BUILD/UPDATE SCRIPT
# Requires: git yaourt bzr wget
# Optional: screen
###################################################################################
# use "screen -L" to create a log file of the install/update
###################################################################################
#
# Updated: 30Apr2017


###################################################################################
# directory to hold source files 
SOURCE_DIR=~/Development/Xfce
mkdir -p $SOURCE_DIR
cd $SOURCE_DIR
###################################################################################


###################################################################################
# list of Xfce core components
XFCE_CORE="     xfce4-dev-tools 
                libxfce4util 
                xfconf 
                libxfce4ui 
                garcon 
                exo 
                xfce4-panel 
                thunar 
                xfce4-settings 
                xfce4-session 
                xfwm4 
                xfdesktop 
                xfce4-appfinder 
                tumbler 
                thunar-volman
                xfce4-power-manager" 
#   gtk-xfce-engine has disappeared                

#list of Xfce archived packages
XFCE_ARCHIVE=""
#not being built:
#   libxfcegui4 - retired and archived (many plugins still depend on this)

#list of Xfce bindings
XFCE_BINDINGS=" xfce4-vala"
#not being built:
#   garcon-vala
#   pyxfce
# thunarx-python
#   xfc
#   xfce4-mm

# list of Xfce plugins
XFCE_PLUGINS="  xfce4-weather-plugin 
                xfce4-genmon-plugin 
                xfce4-places-plugin 
                xfce4-mailwatch-plugin 
                xfce4-eyes-plugin 
                xfce4-cpufreq-plugin 
                xfce4-sensors-plugin 
                xfce4-netload-plugin 
                xfce4-clipman-plugin 
                xfce4-timer-plugin 
                xfce4-mount-plugin
                xfce4-systemload-plugin
                xfce4-wavelan-plugin
                xfce4-embed-plugin
                xfce4-xkb-plugin
                xfce4-time-out-plugin
                xfce4-kbdleds-plugin
                xfce4-mpc-plugin
                xfce4-fsguard-plugin
                xfce4-datetime-plugin
                xfce4-cpugraph-plugin
                xfce4-diskperf-plugin
                xfce4-generic-slider
                xfce4-smartbookmark-plugin
                xfce4-indicator-plugin
                xfce4-verve-plugin
                xfce4-whiskermenu-plugin
                xfce4-pulseaudio-plugin
                xfce4-calculator-plugin
                xfce4-notes-plugin
                xfce4-battery-plugin
                xfce4-statusnotifier-plugin"
# not being built:  
#   xfce4-cddrive-plugin - requires libxfcegui4
#   xfce4-equake-plugin - hosted on sourceforge - see below
#   xfce4-modemlights-plugin - requires libxfcegui4
#   xfce4-quicklauncher-plugin - requires libxfcegui4
#   xfce4-radio-plugin - requires libxfcegui4
#   xfce4-rss-plugin - does not compile
#   xfce4-sample-plugin - just a sample plugin
#   xfce4-teatime-plugin - compiles but doesn't work
#   xfce4-wmdock-plugin - requires libxfcegui4
# incomplete build:
#   xfce4-indicator-plugin - ido/vala conflicts, missing header file
#   xfce4-taskbar-plugin - Apr 2 17, builds but crashes on start
#   xfce4-hardware-monitor-plugin - Apr 30 2017 - missing libgnomecanvasmm and configure warnings

# list of thunar plugins
THUNAR_PLUGINS="thunar-archive-plugin 
                thunar-media-tags-plugin
                thunar-shares-plugin"
# not being built:
#   thunar-vcs-plugin - doesn't seem to work
#   thunar-actions-plugin - missing thunarx-1 (patched with thunarx-2 still not complete code base)

# list of Xfce apps
XFCE_APPS="     gigolo 
                mousepad 
                parole 
                ristretto 
                xfburn
                xfce4-notifyd  
                xfce4-screenshooter 
                xfce4-volumed-pulse
                xfce4-terminal 
                orage
                xfce4-taskmanager
                xfce4-dict
                xfdashboard
                xfmpc"
# not being built:
#   thunar-thumbnailers
#   xfbib
#   xfvnc - built manually. Needs patch to upgrade to libxfce4ui-1 (see AUR)
#   squeeze  (prefer file-roller/engrampa)
#   xfce4-mixer - dependentent on gstreamer0.10 which is no longer maintained
#   xfce4-volumed - superceeded by xfce4-volumed-pulse
                
# list of Xfce art
XFCE_ART="xfwm4-themes"
#not being built:
#   xfce4-artwork - old wallpapers
#   xfce4-icon-theme - old theme

# Other Xfce packages not hosted on git.xfce.org
SYSINFO_ENABLED="yes"
WINDOWCK_ENABLED="yes"
GTK_THEME_CONFIG_ENABLED="yes"
XFCE_THEME_MANAGER_ENABLED="no"
XFWM_COMPOSITE_EDITOR_ENABLED="no"
EQUAKE_PLUGIN_ENABLED="no"
XFCE4_HOTCORNER_PLUGIN_ENABLED="no" #no longer works as of 30April2017
XFPANEL_SWITCH_ENABLED="no"

# listing of packages to build (with pending git changes)
xXFCE_CORE=""
xXFCE_ARCHIVE=""
xXFCE_BINDINGS=""
xXFCE_PLUGINS=""
xTHUNAR_PLUGINS=""
xXFCE_APPS=""
xXFCE_ART=""
xXFCE_OTHER=""

##################################################################################

case $1 in
    init)
        ###INITIAL INSTALL ONLY
        ######clone the packages
        for package in $XFCE_CORE
        do
            git clone git://git.xfce.org/xfce/$package
        done
        
        for package in $XFCE_ARCHIVE
        do
            git clone git://git.xfce.org/archive/$package
        done
        
        for package in $XFCE_BINDINGS
        do
            git clone git://git.xfce.org/bindings/$package
        done

        for package in $XFCE_PLUGINS
        do
            git clone git://git.xfce.org/panel-plugins/$package
        done

        for package in $THUNAR_PLUGINS
        do
            git clone git://git.xfce.org/thunar-plugins/$package
        done
        
        for package in $XFCE_APPS
        do
            git clone git://git.xfce.org/apps/$package
        done
        
        for package in $XFCE_ART
        do
            git clone git://git.xfce.org/art/$package
        done
        

        # Build dependencies
        # Arch Linux (pacman)
        which pacman > /dev/null 2>&1 &&
        (sudo pacman -S \
            xdg-utils xdg-user-dirs xdg-user-dirs-gtk \
            intltool gtk-doc \
            dbus-glib perl-extutils-depends perl-extutils-pkgconfig glib-perl \
            gtk2 gtk3 hicolor-icon-theme startup-notification glade \
            libnotify perl-uri \
            desktop-file-utils libwnck libwnck3 \
            libexif libpng gvfs \
            libxklavier xf86-input-libinput \
            libsm xorg-iceauth \
            libepoxy \
            gdk-pixbuf2 ffmpegthumbnailer freetype2 libgsf libopenraw poppler-glib \
            udisks upower \
            libxml2 \
            libindicator-gtk3 \
            gnu-netcat hddtemp lm_sensors libxnvctrl \
            libunique \
            qrencode \
            libgnomecanvas libgnomecanvas libglademm autoconf-archive \
            cmake \
            libkeybinder3 \
            gtksourceview2 gtksourceview3 \
            taglib gstreamer gst-libav clutter-gtk clutter-gst \
            libburn libisofs \
            libkeybinder2 \
            vte3 gnome-doc-utils \
            libical \
            libgksu \
            libwnck clutter cogl dbus-glib libwnck3 \
            libmpd \
            libglade \
            bzr \
            vala \
            wget libdbusmenu-gtk3
        ) 
        # 15Dec2016 - gtkhotkey no longer in repositories - use AUR

        # vala 0.16.1
        wget http://download.gnome.org/sources/vala/0.16/vala-0.16.1.tar.xz
        tar -xJf vala-0.16.1.tar.xz
        cd vala-0.16.1
        ./configure --prefix='/usr' --enable-vapigen
        make
        sudo make install
        cd ..

        # xfwm4 extra libs (pacman yaourt)
        which pacman > /dev/null 2>&1 &&
            (yaourt libxpresent)

        # indicator plugin requirement (pacman yaourt)
        which pacman > /dev/null 2>&1 &&
            (yaourt ido)

        # xfce4-whiskermenu-plugin requirement (pacman yaourt)
        which pacman > /dev/null 2>&1 &&
            (yaourt menulibre)

        # gtkhotkey required
        which pacman > /dev/null 2>&1 &&
            (yaourt gtkhotkey)

        # glade-gtk2
        which pacman > /dev/null 2>&1 &&
            (yaourt glade-gtk2)

        # fixes for missing m4 directories
        echo $xXFCE_APPS | grep squeeze && 
        (
            mkdir squeeze/m4
        )            
        # mkdir xfce4-sensors-plugin/m4  (fixed early 2015)

        echo "System initialized. Now run with update parameter."          

        ;;

    update|update-all)
        # check to ensure source dir exists
        [[ ! -d $SOURCE_DIR ]] && (echo "Source dir does not exist"; exit 1)
        ###################################################################################
        #pull the package updates (if available)
        for package in $XFCE_CORE
        do
            cd $package
            echo "####################################################################################"
            echo "### $package"
            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') ]]; then
                echo "$package -> #####################Nothing to do"
            else
                git pull git://git.xfce.org/xfce/$package
                xXFCE_CORE="$xXFCE_CORE$package "
            fi
            cd ..
        done
        for package in $XFCE_ARCHIVE
        do
            cd $package
            echo "####################################################################################"
            echo "### $package"
            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') ]]; then
                echo "$package -> #####################Nothing to do"
            else
                git pull git://git.xfce.org/archive/$package
                xXFCE_ARCHIVE="$xXFCE_ARCHIVE$package "
                fi
            cd ..
        done
        for package in $XFCE_BINDINGS
        do
            cd $package
            echo "####################################################################################"
            echo "### $package"            
            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') ]]; then
                echo "$package -> #####################Nothing to do"
            else
                git pull git://git.xfce.org/bindings/$package
                xXFCE_BINDINGS="$xXFCE_BINDINGS$package "
            fi
            cd ..
        done
        for package in $XFCE_PLUGINS
        do
            cd $package
            echo "####################################################################################"
            echo "### $package"            
            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') ]]; then
                echo "$package -> #####################Nothing to do"
            else
                git pull git://git.xfce.org/panel-plugins/$package
                xXFCE_PLUGINS="$xXFCE_PLUGINS$package "
            fi
            cd ..
        done
        for package in $THUNAR_PLUGINS
        do
            cd $package
            echo "####################################################################################"
            echo "### $package"            
            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') ]]; then
                echo "$package -> #####################Nothing to do"
            else
                git pull git://git.xfce.org/thunar-plugins/$package
                xTHUNAR_PLUGINS="$xTHUNAR_PLUGINS$package "
            fi
            cd ..
        done
        for package in $XFCE_APPS
        do
            cd $package
            echo "####################################################################################"
            echo "### $package"            
            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') ]]; then
                echo "$package -> #####################Nothing to do"
            else
                git pull git://git.xfce.org/apps/$package
                xXFCE_APPS="$xXFCE_APPS$package "
            fi
            cd ..
        done
        for package in $XFCE_ART
        do
            cd $package
            echo "####################################################################################"
            echo "### $package"            
            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') ]]; then
                echo "$package -> #####################Nothing to do"
            else
                git pull git://git.xfce.org/art/$package
                xXFCE_ART="$xXFCE_ART$package "
            fi
            cd ..
        done
        ###################################################################################

        ###################################################################################
        # if update-all specified, make it so all packages get updated
        if [ "$1" == "update-all" ];
        then
            xXFCE_CORE="$XFCE_CORE "
            xXFCE_ARCHIVE=$XFCE_ARCHIVE
            xXFCE_BINDINGS=$XFCE_BINDINGS
            xXFCE_PLUGINS=$XFCE_PLUGINS 
            xTHUNAR_PLUGINS=$THUNAR_PLUGINS
            xXFCE_APPS=$XFCE_APPS
            xXFCE_ART=$XFCE_ART
        fi
        ###################################################################################

        ###################################################################################
        # recommended exports
        export PKG_CONFIG_PATH="/usr/lib/pkgconfig:$PKG_CONFIG_PATH"
        export CFLAGS="-O2 -pipe"
        ###################################################################################


        ###################################################################################
        # Lets do it
        cd $SOURCE_DIR
        ###################################################################################

        ###################################################################################
        ###################################################################################
        # XFCE_CORE
        ###################################################################################
        ###################################################################################

        echo $xXFCE_CORE | grep xfce4-dev-tools && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-dev-tools
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-dev-tools
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep libxfce4util && 
        (
            echo
            echo
            echo "================================================================"
            echo libxfce4util
            echo "================================================================"
            #sudo pacman -S intltool gtk-doc
            cd $SOURCE_DIR/libxfce4util
            make clean
            sudo chown -R $USER:$USER *
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug \
                            --enable-gtk-doc
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep xfconf && 
        (
            echo
            echo
            echo "================================================================"
            echo xfconf
            echo "================================================================"
            #sudo pacman -S dbus-glib perl-extutils-depends perl-extutils-pkgconfig glib-perl 
            cd $SOURCE_DIR/xfconf
            make clean
            sudo chown -R $USER:$USER *
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib/xfce4 \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug \
                            --enable-gtk-doc \
                            --with-perl-options=INSTALLDIRS="vendor" 
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep libxfce4ui && 
        (
            echo
            echo
            echo "================================================================"
            echo libxfce4ui
            echo "================================================================"
            #sudo pacman -S gtk2 gtk3 hicolor-icon-theme startup-notification glade 
            # [AUR] glade-gtk2
            cd $SOURCE_DIR/libxfce4ui
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --enable-gtk-doc \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep garcon && 
        (
            echo
            echo
            echo "================================================================"
            echo garcon
            echo "================================================================"
            cd $SOURCE_DIR/garcon
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug \
                            --enable-gtk-doc
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep exo && 
        (
            echo
            echo
            echo "================================================================"
            echo exo
            echo "================================================================"
            #sudo pacman -S libnotify perl-uri
            cd $SOURCE_DIR/exo
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib/xfce4 \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug \
                            --enable-gtk-doc
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep xfce4-panel && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-panel
            echo "================================================================"
            #sudo pacman -S desktop-file-utils libwnck libwnck3
            cd $SOURCE_DIR/xfce4-panel
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --enable-gtk-doc \
                            --enable-gio-unix \
                            --disable-debug
            #   --enable-debug=gdb
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep -e "thunar " -e "thunar$" && 
        (
            echo
            echo
            echo "================================================================"
            echo thunar
            echo "================================================================"
            #sudo pacman -S libexif libpng gvfs
            cd $SOURCE_DIR/thunar
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug \
                            --enable-gio-unix \
                            --enable-dbus \
                            --enable-gudev \
                            --enable-notifications \
                            --enable-exif \
                            --enable-pcre
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep xfce4-settings && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-settings
            echo "================================================================"
            #sudo pacman -S libxklavier xf86-input-libinput
            # 04MAR15 - removed upower dependency and changed to --disable-upower-glib 
            # 04MAY15 - added libinput dependency and built with --enable-xorg-libinput (but not installing xf86-input-libinput instead using xf86-input-synaptics)
            cd $SOURCE_DIR/xfce4-settings
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug \
                            --enable-sound-settings \
                            --disable-upower-glib \
                            --enable-pluggable-dialogs \
                            --enable-libxklavier \
                            --enable-xorg-libinput
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep xfce4-session && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-session
            echo "================================================================"
            #sudo pacman -S libsm xorg-iceauth
            cd $SOURCE_DIR/xfce4-session
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib/xfce4 \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep xfwm4 && 
        (
            echo
            echo
            echo "================================================================"
            echo xfwm4
            echo "================================================================"
           #sudo pacman -S libepoxy     
	       # [AUR] libxpresent
            cd $SOURCE_DIR/xfwm4
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug \
                            --enable-compositor \
                            --enable-xsync \
                            --enable-epoxy
            #               --enable-xpresent (for tearing if vid driver supports it)
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep xfdesktop && 
        (
            echo
            echo
            echo "================================================================"
            echo xfdesktop
            echo "================================================================"
            cd $SOURCE_DIR/xfdesktop
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug \
                            --enable-thunarx \
                            --enable-notifications
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep xfce4-appfinder && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-appfinder
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-appfinder
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --enable-gtk3 \
                            --disable-debug 
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep gtk-xfce-engine && 
        (
            echo
            echo
            echo "================================================================"
            echo gtk-xfce-engine
            echo "================================================================"
            cd $SOURCE_DIR/gtk-xfce-engine
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-gtk3 \
                            --disable-debug 
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep tumbler && 
        (
            echo
            echo
            echo "================================================================"
            echo tumbler
            echo "================================================================"
            #sudo pacman -S gdk-pixbuf2 ffmpegthumbnailer freetype2 libgsf libopenraw poppler-glib
            # 23DEC16 - libopenraw patch
            # 10MAY17 - gst patches + msoffice patch
            cd $SOURCE_DIR/tumbler
            
            ### patches
            # mp3 covers
            #patch -p1 < ~/Dropbox/Development/Xfce/PATCHES/tumbler/0001-tumbler_audio_covers.patch
            # webp
            #patch -p1 < ~/Dropbox/Development/Xfce/PATCHES/tumbler/0002-tumbler_webp-thumbnailer.patch

            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib/xfce4 \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug 
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep thunar-volman && 
        (
            echo
            echo
            echo "================================================================"
            echo thunar-volman
            echo "================================================================"
            cd $SOURCE_DIR/thunar-volman
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib/xfce4 \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug 
            make
            sudo make install
        )

        echo $xXFCE_CORE | grep xfce4-power-manager && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-power-manager
            echo "================================================================"
            #sudo pacman -S udisks2 upower
            cd $SOURCE_DIR/xfce4-power-manager
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --enable-network-manager \
                            --enable-polkit \
                            --disable-debug
            #   --enable-debug=full
            make
            sudo make install
        )

        ###################################################################################
        ###################################################################################
        # XFCE_ARCHIVE
        ###################################################################################
        ###################################################################################

        echo $xXFCE_ARCHIVE | grep libxfcegui4 && 
        (
            echo
            echo
            echo "================================================================"
            echo libxfcegui4
            echo "================================================================"
            #sudo libglade
            cd $SOURCE_DIR/libxfcegui4
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var \
                            --disable-static \
                            --disable-debug 
            make
            sudo make install
        )

        ###################################################################################
        ###################################################################################
        # XFCE_BINDINGS
        ###################################################################################
        ###################################################################################

        echo $xXFCE_BINDINGS | grep xfce4-vala && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-vala
            echo "================================================================"
            #need to have vala 0.26 installed first for xfce4-vala to compile
            cd $SOURCE_DIR
            wget http://download.gnome.org/sources/vala/0.26/vala-0.26.2.tar.xz
            tar -xJf vala-0.26.2.tar.xz
            cd vala-0.26.2
            ./configure --prefix=/usr
            make
            sudo make install
        )

        echo $xXFCE_BINDINGS | grep xfce4-vala && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-vala
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-vala
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var 
            make
            sudo make install
        )

        ###################################################################################
        ###################################################################################
        # XFCE_PLUGINS
        ###################################################################################
        ###################################################################################

        echo $xXFCE_PLUGINS | grep xfce4-weather-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-weather-plugin
            echo "================================================================"
            #sudo pacman -S libxml2
            cd $SOURCE_DIR/xfce4-weather-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-genmon-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-genmon-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-genmon-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug 
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-places-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-places-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-places-plugin
            make clean
            ./autogen.sh    CFLAGS=-fgnu89-inline \
                            --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-indicator-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-indicator-plugin
            echo "================================================================"
            #sudo pacman -S libindicator-gtk3
            cd $SOURCE_DIR/xfce4-indicator-plugin
            make clean
            ./autogen.sh --prefix=/usr --disable-debug --sysconfdir=/etc
            make
            sudo make install
            ### installs and works, but missing ido, vala conflicts
            ### missing indicator-ng.h and ido3
        )

        echo $xXFCE_PLUGINS | grep xfce4-mailwatch-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-mailwatch-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-mailwatch-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/eswtc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-eyes-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-eyes-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-eyes-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-cpufreq-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-cpufreq-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-cpufreq-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-sensors-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-sensors-plugin
            echo "================================================================"
            #sudo pacman -S gnu-netcat hddtemp lm_sensors libxnvctrl
            # --enable-xnvctrl requires libxnvctrl
            cd $SOURCE_DIR/xfce4-sensors-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --enable-xnvctrl \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-notes-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-notes-plugin
            echo "================================================================"
            #sudo pacman -S libunique
            cd $SOURCE_DIR/xfce4-notes-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --disable-static \
                            --disable-debug \
                            --enable-gtk3
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-netload-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-netload-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-netload-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-debug 
            make
            sudo make install
            # for commandline
            cd panel-plugin
            make commandline
            cd ..
        )

        echo $xXFCE_PLUGINS | grep xfce4-clipman-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-clipman-plugin
            echo "================================================================"
            #sudo pacman -S qrencode
            cd $SOURCE_DIR/xfce4-clipman-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug 
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-timer-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-timer-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-timer-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-mount-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-mount-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-mount-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-taskbar-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-taskbar-plugin
            echo "================================================================"
            #sudo pacman -S gtkhotkey
            cd $SOURCE_DIR/xfce4-taskbar-plugin
            make clean
            # fix path problem
            sed -i 's/panel-plugins/panel\/plugins/' Makefile
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-systemload-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-systemload-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-systemload-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-wavelan-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-wavelan-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-wavelan-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-embed-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-embed-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-embed-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-xkb-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-xkb-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-xkb-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-time-out-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-time-out-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-time-out-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-kbdleds-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-kbdleds-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-kbdleds-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-mpc-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-mpc-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-mpc-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )
        
        echo $xXFCE_PLUGINS | grep xfce4-fsguard-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-fsguard-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-fsguard-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-datetime-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-datetime-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-datetime-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-cpugraph-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-cpugraph-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-cpugraph-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-diskperf-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-diskperf-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-diskperf-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )
        
        echo $xXFCE_PLUGINS | grep xfce4-generic-slider && 
        (
            echo
            echo "================================================================"
            echo xfce4-generic-slider
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-generic-slider
            make clean       
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-smartbookmark-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-smartbookmark-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-smartbookmark-plugin
            make clean   
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug    
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-hardware-monitor-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-hardware-monitor-plugin
            echo "================================================================"
            #pacman -S libgnomecanvas libgnomecanvasmm libglademm autoconf-archive
            # APR302017 - unable to build: missing libgnomecanvasmm and compile flags warning
            cd $SOURCE_DIR/xfce4-hardware-monitor-plugin
            make clean
            
            #sed -i '/c++11/d' configure.ac
            #sed -i '/gnu++11/d' configure.ac
            #sed -i 's/AM_PROG_AR/AM_PROG_AR\nAX_CHECK_COMPILE_FLAG([-std=c++11], [CXXFLAGS="$CXXFLAGS -std=c++11"])/' configure.ac
            #sed -i 's/AM_PROG_AR/AM_PROG_AR\nAX_CHECK_COMPILE_FLAG([-std=gnu++11], [CXXFLAGS="$CXXFLAGS -std=gnu++11"])/' configure.ac

            ./autogen.sh
            ./configure  --prefix=/usr
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-verve-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-verve-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-verve-plugin
            make clean   
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug    
            make
            sudo make install
        )

        echo $WHISKERMENU_ENABLED | grep yes && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-whiskermenu-plugin
            echo "================================================================"
            #sudo pacman -S cmake menulibre(AUR)
            cd $SOURCE_DIR/xfce4-whiskermenu-plugin
            make clean
            #find . -iwholename '*cmake*' -not -name CMakeLists.txt -delete
            #rm -rf build && mkdir build && cd build
            cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=/usr/lib -GNinja
            ninja 
            cd ..
            sudo ninja -C build install    
        )

        echo $xXFCE_PLUGINS | grep xfce4-pulseaudio-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-pulseaudio-plugin
            echo "================================================================"
            #sudo pacman -S libkeybinder3
            # 03MAR15 - added --with-mixer-command parameter
            cd $SOURCE_DIR/xfce4-pulseaudio-plugin
            make clean   
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --with-mixer-command=pavucontrol \
			                 --enable-keybinder \
                            --disable-debug    
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-calculator-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-calculator-plugin
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-calculator-plugin
            make clean   
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug    
            make
            sudo make install
        )

        echo $xXFCE_PLUGINS | grep xfce4-statusnotifier-plugin && 
        (
            echo
            echo "================================================================"
            echo xfce4-statusnotifier-plugin
            echo "================================================================"
            #sudo pacman -S libdbusmenu-gtk3
            cd $SOURCE_DIR/xfce4-statusnotifier-plugin
            make clean   
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug    
            make
            sudo make install
        )

        ###################################################################################
        ###################################################################################
        # THUNAR_PLUGINS
        ###################################################################################
        ###################################################################################

        echo $xTHUNAR_PLUGINS | grep thunar-archive-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo thunar-archive-plugin
            echo "================================================================"
            cd $SOURCE_DIR/thunar-archive-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib/xfce4 \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xTHUNAR_PLUGINS | grep thunar-media-tags-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo thunar-media-tags-plugin
            echo "================================================================"
            cd $SOURCE_DIR/thunar-media-tags-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib/xfce4 \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xTHUNAR_PLUGINS | grep thunar-vcs-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo thunar-vcs-plugin
            echo "================================================================"
            cd $SOURCE_DIR/thunar-vcs-plugin
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib/xfce4 \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xTHUNAR_PLUGINS | grep thunar-shares-plugin && 
        (
            echo
            echo
            echo "================================================================"
            echo thunar-shares-plugin
            echo "================================================================"
            cd $SOURCE_DIR/thunar-shares-plugin
            make clean
            ./autogen.sh --prefix=$(pkg-config --variable prefix thunarx-2)
            make
            sudo make install
            # info on setting up samba: http://goodies.xfce.org/projects/thunar-plugins/thunar-shares-plugin
        )

        ###################################################################################
        ###################################################################################
        # XFCE_APPS
        ###################################################################################
        ###################################################################################

        echo $xXFCE_APPS | grep gigolo && 
        (
            echo
            echo
            echo "================================================================"
            echo gigolo
            echo "================================================================"
            cd $SOURCE_DIR/gigolo
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep mousepad && 
        (
            echo
            echo
            echo "================================================================"
            echo mousepad
            echo "================================================================"
            #sudo pacman -S gtksourceview2 gtksourceview3
            cd $SOURCE_DIR/mousepad
            make clean
            ./autogen.sh    --prefix=/usr \
                            --disable-debug \
                            --sysconfdir=/etc \
                            --disable-static \
                            --enable-gtk3 \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep parole && 
        (
            echo
            echo
            echo "================================================================"
            echo parole
            echo "================================================================"
            #sudo pacman -S taglib gstreamer gst-libav clutter-gtk clutter-gst
            cd $SOURCE_DIR/parole
            rm -rf m4
            make clean
            ./autogen.sh    --prefix=/usr \
                            --disable-debug \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug \
                            --enable-gtk-doc \
                            --enable-clutter 
                            #(https://bugzilla.xfce.org/show_bug.cgi?id=11825)
                            #blacklisted 26FEB2017
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep ristretto && 
        (
            echo
            echo
            echo "================================================================"
            echo ristretto
            echo "================================================================"
            cd $SOURCE_DIR/ristretto
            make clean
            ./autogen.sh    --prefix=/usr \
                            --disable-debug \
                            --sysconfdir=/etc \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfburn && 
        (
            echo
            echo
            echo "================================================================"
            echo xfburn
            echo "================================================================"
            #sudo pacman -S libburn libisofs
            cd $SOURCE_DIR/xfburn
            make clean
            ./autogen.sh    --prefix=/usr \
                            --disable-debug \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug \
                            --enable-gstreamer
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfce4-mixer && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-mixer
            echo "================================================================"
            #sudo pacman -S libkeybinder2
            cd $SOURCE_DIR/xfce4-mixer
            make clean
            ./autogen.sh    --prefix=/usr \
                            --disable-debug \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfce4-notifyd && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-notifyd
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-notifyd
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug 
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfce4-screenshooter && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-screenshooter
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-screenshooter
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfce4-terminal && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-terminal
            echo "================================================================"
            #sudo pacman -S vte3 gnome-doc-utils
            cd $SOURCE_DIR/xfce4-terminal
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug \
			    --enable-gen-doc
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfce4-volumed && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-volumed
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-volumed
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfce4-volumed-pulse && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-volumed-pulse
            echo "================================================================"
            #sudo pacman -S libkeybinder2
            cd $SOURCE_DIR/xfce4-volumed-pulse
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep squeeze && 
        (
            echo
            echo
            echo "================================================================"
            echo squeeze
            echo "================================================================"
            cd $SOURCE_DIR/squeeze
            #need to "mkdir m4"
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep orage && 
        (
            echo
            echo
            echo "================================================================"
            echo orage
            echo "================================================================"
            #sudo pacman -S libical
            cd $SOURCE_DIR/orage
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfce4-taskmanager && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-taskmanager
            echo "================================================================"
            #sudo pacman -S libgksu
            cd $SOURCE_DIR/xfce4-taskmanager
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug \
                            --enable-gtk3
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfce4-dict && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-dict
            echo "================================================================"
            cd $SOURCE_DIR/xfce4-dict
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --disable-static \
                            --disable-debug
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfdashboard &&
        (
            echo
            echo
            echo "================================================================"
            echo xfdashboard
            echo "================================================================"
            #sudo pacman -S libwnck clutter cogl gio gio-unix dbus-glib libwnck3
            # 04MAR15 - added libwnck3 as dependency
            cd $SOURCE_DIR/xfdashboard
            make clean
           ./autogen.sh --prefix=/usr  --sysconfdir=/etc --disable-dependency-tracking
            make
            sudo make install
        )

        echo $xXFCE_APPS | grep xfmpc &&
        (
            echo
            echo
            echo "================================================================"
            echo xfmpc
            echo "================================================================"
            #sudo pacman -S libmpd
            # ***needs patch. see: http://bug-attachment.xfce.org/attachment.cgi?id=5577
            cd $SOURCE_DIR/xfmpc
            make clean
           ./autogen.sh --prefix=/usr  --sysconfdir=/etc 
            make
            sudo make install
        )


        ###################################################################################
        ###################################################################################
        # XFCE ART
        ###################################################################################
        ###################################################################################

         
        echo $xXFCE_ART | grep xfwm4-themes && 
        (
            echo
            echo
            echo "================================================================"
            echo xfwm4-themes
            echo "================================================================"
            cd $SOURCE_DIR/xfwm4-themes
            make clean
            ./autogen.sh    --prefix=/usr \
                            --sysconfdir=/etc \
                            --libexecdir=/usr/lib \
                            --localstatedir=/var
            make
            sudo make install
        )


        ###################################################################################
        ###################################################################################
        # Others
        ###################################################################################
        ###################################################################################

        > /tmp/external_apps

        echo $WINDOWCK_ENABLED | grep yes && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-windowck-plugin
            echo "================================================================"
            
            if [ ! -d $SOURCE_DIR/xfce4-windowck-plugin ]; then
                cd $SOURCE_DIR
                git clone https://github.com/cedl38/xfce4-windowck-plugin.git
            fi
       
            cd $SOURCE_DIR/xfce4-windowck-plugin

            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') && "$1" != "update-all" ]]; then
                echo "xfce4-windowck-plugin -> #####################Nothing to do"
            else
                echo -n "xfce4-windowck-plugin " >> /tmp/external_apps
                git pull https://github.com/cedl38/xfce4-windowck-plugin.git
                make clean
                ./autogen.sh    --prefix=/usr \
                   --sysconfdir=/etc \
                   --libexecdir=/usr/lib \
                   --localstatedir=/var
                make
                sudo make install
            fi
        )
        
        echo $SYSINFO_ENABLED | grep yes && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-sysinfo-plugin
            echo "================================================================"
            
            if [ ! -d $SOURCE_DIR/xfce4-sysinfo-plugin ]; then
                cd $SOURCE_DIR
                git clone https://github.com/jarro2783/xfce4-sysinfo-plugin.git
            fi
       
            cd $SOURCE_DIR/xfce4-sysinfo-plugin

            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') && "$1" != "update-all" ]]; then
                echo "xfce4-sysinfo-plugin -> #####################Nothing to do"
            else
                echo -n "xfce4-sysinfo-plugin " >> /tmp/external_apps
                git pull https://github.com/jarro2783/xfce4-sysinfo-plugin.git
                make clean
                ./autogen.sh    --prefix=/usr \
                                --sysconfdir=/etc \
                                --libexecdir=/usr/lib \
                                --localstatedir=/var
                make
                sudo make install
              
            fi
        )
        
        echo $GTK_THEME_CONFIG_ENABLED | grep yes && 
        (
            echo
            echo
            echo "================================================================"
            echo gtk-theme-config
            echo "================================================================"
       
            if [ ! -d $SOURCE_DIR/gtk-theme-config ]; then
                cd $SOURCE_DIR
                git clone https://github.com/satya164/gtk-theme-config.git
            fi
                   
            cd $SOURCE_DIR/gtk-theme-config

            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') && "$1" != "update-all" ]]; then
                echo "gtk-theme-config -> #####################Nothing to do"
            else
                echo -n "gtk-theme-config " >> /tmp/external_apps
                git pull https://github.com/satya164/gtk-theme-config.git
                make clean   
                make
                sudo make install
            fi
        )

        echo $XFCE_THEME_MANAGER_ENABLED | grep yes && 
        (
            echo -n "xfce-theme-manager " >> /tmp/external_apps
            echo
            echo
            echo "================================================================"
            echo xfce-theme-manager
            echo "================================================================"
       
            if [ ! -d $SOURCE_DIR/xfce-theme-manager ]; then
                mkdir $SOURCE_DIR/xfce-theme-manager
            fi
               
            cd $SOURCE_DIR/xfce-theme-manager
            rm -rf $SOURCE_DIR/xfce-theme-manager/Xfce-Theme-Manager*
            wget http://keithhedger.hostingsiteforfree.com/zips/xfcethememanager/Xfce-Theme-Manager-0.3.6.tar.gz
            tar xzvf Xfce-Theme-Manager-0.3.6.tar.gz
            cd Xfce-Theme-Manager-0.3.6
            ./configure --prefix=/usr
            sudo make clean
            make
            sudo make install
        )


        echo $XFWM_COMPOSITE_EDITOR_ENABLED | grep yes && 
        (
            echo -n "xfwm-composite-editor " >> /tmp/external_apps
            echo
            echo
            echo "================================================================"
            echo xfwm-composite-editor
            echo "================================================================"
       
            if [ ! -d $SOURCE_DIR/xfwm-composite-editor ]; then
                mkdir $SOURCE_DIR/xfwm-composite-editor
            fi
   
            cd $SOURCE_DIR/xfwm-composite-editor
            rm -rf $SOURCE_DIR/xfwm-composite-editor/Xfwm4CompositeEditor*
            wget http://keithhedger.hostingsiteforfree.com/zips/Xfwm4CompositeEditor-0.2.0.tar.gz
            tar xzvf Xfwm4CompositeEditor-0.2.0.tar.gz
            cd Xfwm4CompositeEditor-0.2.0
            ./configure --prefix=/usr
            sudo make clean
            make
            sudo make install
        )

 
        cd $SOURCE_DIR

        echo $EQUAKE_PLUGIN_ENABLED | grep yes && 
        (
            echo -n "xfce4-equake-plugin " >> /tmp/external_apps
            echo
            echo
            echo "================================================================"
            echo xfce4-equake-plugin
            echo "================================================================"
       
            if [ ! -d $SOURCE_DIR/xfce4-equake-plugin ]; then
                mkdir $SOURCE_DIR/xfce4-equake-plugin
            fi
   
            cd $SOURCE_DIR/xfce4-equake-plugin
            rm -rf $SOURCE_DIR/xfce4-equake-plugin/*
            wget http://sourceforge.net/projects/equake/files/latest/download -O equake.tar.gz
            tar xzvf equake.tar.gz
            cd xfce4-equake-plugin*
            sudo make clean
            ./configure --prefix=/usr
            make
            sudo make install
        )


        cd $SOURCE_DIR

        echo $XFCE4_HOTCORNER_PLUGIN_ENABLED | grep yes && 
        (
            echo
            echo
            echo "================================================================"
            echo xfce4-hotcorner-plugin
            echo "================================================================"
       
            if [ ! -d $SOURCE_DIR/xfce4-hotcorner-plugin ]; then
                cd $SOURCE_DIR
                git clone git://github.com/brianhsu/xfce4-hotcorner-plugin.git
            fi
                   
            cd $SOURCE_DIR/xfce4-hotcorner-plugin

            git remote update
            if [[ $(git status -uno | grep 'Your branch is up-to-date') && "$1" != "update-all" ]]; then
                echo "xfce4-hotcorner-plugin -> #####################Nothing to do"
            else
                echo -n "xfce4-hotcorner-plugin " >> /tmp/external_apps
                git pull git://github.com/brianhsu/xfce4-hotcorner-plugin.git
                cmake -DCMAKE_INSTALL_PREFIX=/usr .
                sudo make install
            fi
        )


        cd $SOURCE_DIR
        
        echo $XFPANEL_SWITCH_ENABLED | grep yes && 
        (
            echo
            echo
            echo "================================================================"
            echo xfpanel-switch
            echo "================================================================"
       
            if [ -d $SOURCE_DIR/xfpanel-switch ]; then
                rm -rf $SOURCE_DIR/xfpanel-switch                
            fi
            
            bzr branch lp:xfpanel-switch 
            echo -n "xfpanel-switch " >> /tmp/external_apps                   

            cd $SOURCE_DIR/xfpanel-switch

            ./configure && make && sudo make install
         )


        cd $SOURCE_DIR        
              
        ###################################################################################
        ###################################################################################
        # Finish up
        ###################################################################################
        ###################################################################################

        echo
        echo
        echo "================================================================"
        echo "================================================================"
        echo "Summary of Components Built:"
        echo "================================================================"
        echo "================================================================"
        echo ""
        echo "XFCE_CORE     = $(echo $xXFCE_CORE | sed -e 's/ /\n\t\t/g')"
        echo "XFCE_ARCHIVE  = $(echo $xXFCE_ARCHIVE | sed -e 's/ /\n\t\t/g')"
        echo "XFCE_BINDINGS = $(echo $xXFCE_BINDINGS | sed -e 's/ /\n\t\t/g')"
        echo "XFCE_PLUGINS  = $(echo $xXFCE_PLUGINS | sed -e 's/ /\n\t\t/g')"
        echo "THUNAR_PLUGINS= $(echo $xTHUNAR_PLUGINS | sed -e 's/ /\n\t\t/g')"
        echo "XFCE_APPS     = $(echo $xXFCE_APPS | sed -e 's/ /\n\t\t/g')"
        echo "XFCE_ART      = $(echo $xXFCE_ART | sed -e 's/ /\n\t/g')"
        echo "XFCE_OTHER    = $(cat /tmp/external_apps | sed -e 's/ /\n\t\t/g')"
        echo "================================================================"
        echo "================================================================"
        echo "Done. Log out and back in again."
        echo "================================================================"
        echo "================================================================"
        ;;
    *)
        echo "ToZ's Xfce from git script (2015/16/17)"
        echo "Built on base arch install"
        echo "Will only work on Arch Linux!!!"
        echo
        echo "Usage: $0 <action>"
        echo "   init -> initialize the build environment MUST BE RUN FIRST!!!"
        echo "   update -> to update the build from the git tree for packages with changes"
        echo "   update-all -> to update all packages regardless of whether there are changes"
        echo
        ;;

esac

exit 0

